/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define SCROLL  4

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ---------------------------------------------------------------------------------------------
// |Q    |W    |E         |R      |T      |  |Y   |U               |I         |O         |P        |
// |A    |S    |D         |F      |G      |  |H   |J               |K         |L         |ENT      |
// |Z    |X    |C         |V      |NONE   |       |SPC             |B         |N         |M        |
                        bindings = <
   &kp Q  &kp W &kp E      &kp R   &kp T    &kp Y &kp U            &mt LALT I &mt RGUI O &lt 5 P
   &kp A  &kp S &kp D      &kp F   &kp G    &kp H &mt LCTRL J      &kp K      &lt 4 L    &lt 3 RET
   &kp Z  &kp X &mt LGUI C &lt 1 V &none       &mt LSHIFT SPACE &lt 2 B    &lt 1 N    &kp M
                        >;

//			sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
                };
                lower_layer {
// -------------------------------------------------------------------------------------------------------------
// |1        |2      |3            |4           |5           ||6       |7       |8        |9         |0        |
// |ESC      |TAB    |LC+LG+N      |Output-BLE  |LS+LG+N     ||LEFT    |DOWN    |UP       |RIGHT     |BACKSPACE|
// |LSHIFT   |NONE   |Output-USB   |LGUI+F11    |NONE                  |HOME    |,        |   .      |/        |
                        bindings = <
   &kp N1     &kp N2  &kp N3        &kp N4       &kp N5        &kp N6   &kp N7   &kp N8    &kp N9     &kp N0
   &kp ESC    &kp TAB &kp LC(LG(N)) &out OUT_BLE &kp LS(LG(N)) &kp LEFT &kp DOWN &kp UP    &kp RIGHT  &kp BSPC
   &kp LSHIFT &none   &out OUT_USB  &kp LG(F11)  &none                  &kp HOME &kp COMMA &kp DOT    &kp SLASH
                        >;

			//sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------------
// |F1      |F2      |F3      |F4       |F5      ||F6      |F7      |F8      |F9       |F10      |
// |`       |CAPS    |\       |-        |=       ||[       |]       |;       |'        |DEL      |
// |NONE    |NONE    |NONE    |NONE     |NONE              |END     |NONE    |PG_DN    |PG_UP    |
                        bindings = <
   &kp F1    &kp F2   &kp F3   &kp F4    &kp F5    &kp F6   &kp F7   &kp F8   &kp F9    &kp F10
   &kp GRAVE &kp CAPS &kp BSLH &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp SEMI &kp SQT   &kp DEL
   &none     &none    &none    &none     &none              &kp END  &none    &kp PG_DN &kp PG_UP
                        >;

			//sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
                };
                adjust_layer {
// --------------------------------------------------------------------------------------------------------------------------
// |BT 1       |BT 2        |BT 3        |P+          |P*            ||P1       |P2       |P3       |P0        |TAB         |
// |BT CLR     |BT 0        |BT 4        |P-          |P/            ||P4       |P5       |P6       |P.        |NONE        |
// |NONE       |NONE        |NONE        |NONE        |                         |P7       |P8       |P9        |P=          |
                        bindings = <
   &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp KP_PLUS  &kp KP_MULTIPLY &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_N0  &kp TAB
   &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 4 &kp KP_MINUS &kp KP_SLASH    &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_DOT &none
   &none        &none        &none        &none        &none                     &kp KP_N7 &kp KP_N8 &kp KP_N9  &kp KP_EQUAL
                        >;

			//sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
                };
                scroll_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------
// |LGUI+F13  |Win_Up          |Win_Left         |Win_TopLeft  |Win_TopRight||MENU      |Grab full        |Grab part        |Sort by name     |Finder Delete     |
// |NONE      |Win_Down        |Win_Right        |Win_BotLeft  |Win_BotRight||UNDO      |SAVE             |Select all       |NONE             |Finder Empty Trash|
// |NONE      |NONE            |NONE             |NONE         |NONE                    |COPY             |PASTE            |New              |NONE              |
                        bindings = <
   &kp LG(F13) &kp LC(LA(UP))   &kp LC(LA(LEFT))  &kp LC(LA(U)) &kp LC(LA(I)) &kp LC(F2) &kp LS(LG(N3))    &kp LS(LG(N4))    &kp LA(LG(N1))    &kp LG(BSPC)
   &none       &kp LC(LA(DOWN)) &kp LC(LA(RIGHT)) &kp LC(LA(J)) &kp LC(LA(K)) &kp LG(Z)  &kp LG(S)         &kp LG(A)         &none             &kp LS(LG(BSPC)) 
   &none       &none            &none             &none         &none                    &kp LG(C)         &kp LG(V)         &kp LG(N)         &none
                        >;

			//sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
                };
      };
};
