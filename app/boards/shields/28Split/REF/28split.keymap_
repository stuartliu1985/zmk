/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define DEFAULT 0
#define NUM	1
#define FUNC	2
#define PAD	3
#define COMMAND	4
#define SCROLL	5
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ----------------------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |     R    |   T   ||        Y       |     U    |     I     |    O    |  P  |
// |  A  |  S  |  D  |     F    |   G   ||        H       |     J    |     K     |    L    | ENT |
// |  Z  |  X  |                                                                 |    N    |  M  |
//                   |     C    |   V   ||       SPC      |     B    |
                        bindings = <
   &kp Q  &kp W &kp E &kp R      &kp T   &kp Y            &kp U       &mt LALT I &mt RGUI O &lt 5 P
   &kp A  &kp S &kp D &kp F      &kp G   &kp H            &mt LCTRL J &kp K      &lt 4 L    &lt 3 RET
   &kp Z  &kp X                                                                  &lt 1 N    &kp M
                      &mt LGUI C &lt 1 V &mt LSHIFT SPACE &lt 2 B
                        >;
                };
                num_layer {
// ----------------------------------------------------------------------------------------------------------
// |   1  |     2    |       3       |  4   |      5    |   |   6    |    7    |  8   |     9    |    0    |
// |  ESC |    TAB   |   LC+LGUI+N   | NONE | LS+LGUI+N |   |  LEFT  |  DOWN   |  UP  |  RIGHT   |BACKSPACE|
// |LSHIFT|   NONE   |                                                                |     .    |    /    |
//                                   | NONE | LGUI+F11  |   |  HOME  |    ,    |
                        bindings = <
   &kp N1     &kp N2  &kp N3          &kp N4 &kp N5          &kp N6   &kp N7    &kp N8 &kp N9     &kp N0
   &kp ESC    &kp TAB &kp LC(LGUI(N)) &none  &kp LS(LGUI(N)) &kp LEFT &kp DOWN  &kp UP &kp RIGHTG &kp BSPC
   &kp LSHIFT &none                                                                    &kp DOT    &kp SLASH
                                      &none  &kp LGUI(F11)   &kp HOME &kp COMMA
                        >;
                };
                func_layer {
// ------------------------------------------------------------------------------------------------------------------------
// |     F1       |        F2       |  F3    |      F4      |       F5       ||   F6   |   F7   |  F8    |  F9   |  F10  |
// |     `        |       CAPS      |  \     |      -       |       =        ||   [    |   ]    |  ;     |  '    |  DEL  |
// |  Window left |   Window down   |                                                                    | NONE  | NONE  |
//                                           |   Window up  |   Window right || END    |  NONE  |
                        bindings = <
   &kp F1           &kp F2           &kp F3   &kp F4         &kp F5            &kp F6   &kp F7   &kp F8   &kp F9  &kp F10
   &kp GRAVE        &kp CAPS         &kp BSLH &kp MINUS      &kp EQUAL         &kp LBKT &kp RBKT &kp SEMI &kp SQT &kp DEL
   &kp LC(LA(LEFT)) &kp LC(LA(DOWN))                                                                      &none   &none
                                              &kp LC(LA(UP)) &kp LC(LA(RIGHT)) &kp END  &none
                        >;
                };
                pad_layer {
// ---------------------------------------------------------------------------------
// |NONE|NONE |NONE |   P+    |    P*    | |  P1  |  P2  |  P3  |  P0   |   TAB   |
// |NONE|NONE |NONE |   P-    |    P/    | |  P4  |  P5  |  P6  |  P.   |   NONE  |
// |NONE|NONE |                                                 |  P9   |   P=    |
//                  |  NONE   |   NONE   | |  P7  |  P8  |
                        bindings = <
   &none &none &none &kp_PLUS  &kp_MULTIPLY &kp_N1 &kp_N2 &kp_N3 &kp_N0  &kp TAB
   &none &none &none &kp_MINUS &kp_SLASH    &kp_N4 &kp_N5 &kp_N6 &kp_DOT &none
   &none &none                                                   &kp_N9  &kp_EQUAL
                     &none     &none        &kp_N7 &kp_N8
                        >;
                };
                command_layer {
// ----------------------------------------------------------------------------------------------------------------------
// |NONE|  WeChat   |NONE |NONE |NONE| |   MENU   |   Grab full   |   Grab part   | Sort by name  |Remove file         |
// |NONE|  NONE     |NONE |NONE |NONE| |   UNDO   |   SAVE        |   Select all  | NONE          |Remove file for good|
// |NONE|  NONE     |                                                             | New           |NONE                |
//                        |NONE |NONE| |   COPY   |   PASTE       |
                        bindings = <
   &none &kp LGUI(F13) &none &none &none &kp LC(F2)  &kp LS(LGUI(3)) &kp LS(LGUI(4)) &kp LA(LGUI(1)) &kp LGUI(BSPC)
   &none &none         &none &none &none &kp LGUI(Z) &kp LGUI(S)     &kp LGUI(A)     &none           &kp LS(GUI(BSPC)) 
   &none &none                                                                       &kp LGUI(N)     &none
                             &none &none &kp LGUI(C) &kp LGUI(V) 
                        >;
                };
                scroll_layer {
// ---------------------------------------------------------------------------------------------------------------
// |NONE|   Window Up    |   Window Left   |WindowTopLeft|WindowTopRight|   UP   |   LEFT  |NONE |NONE |NONE |
// |NONE|   Window Down  |   Window Right  |WindowBotLeft|WindowBowRight|  DOWN  |  RIGHT  |NONE |NONE |NONE |
// |NONE|   NONE         |                                                                       |NONE |NONE |
//                                         |NONE         |NONE          | PG_DN  |  PG_UP  |NONE |NONE |NONE |
                        bindings = <
   &none &kp LC(LA(UP))   &kp LC(LA(LEFT))  &kp LC(LA(U)) &kp LC(LA(I)) &kp UP    &kp LEFT  &none &none &none 
   &none &kp LC(LA(DOWN)) &kp LC(LA(RIGHT)) &kp LC(LA(J)) &kp LC(LA(K)) &kp DOWN  &kp RIGHT &none &none &none 
   &none &none                                                                                    &none &none
                                            &none         &none         &kp PG_DN &kp PG_UP
                        >;
                };
        };
};
